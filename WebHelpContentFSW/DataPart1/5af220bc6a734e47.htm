
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Network and Remote Operation|Remote Control Basics|Status Reporting System" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../" MadCap:HelpSystemFileName="FSW_HTML_UserManuals_en.xml" MadCap:SearchType="Stem">
<!-- saved from url=(0014)about:internet -->
<head><meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9">
</meta>
        <link href="Resources/workspace/css/madcap_mod.css" rel="stylesheet" type="text/css">
</link><title>Structure of a SCPI Status Register</title>
        <style>
					@import url(Resources/workspace/css/html_help.css);
				</style>
        <link disabled="disabled" href="Resources/workspace/css/html_help.css" rel="stylesheet" type="text/css">
</link>
        <MadCap:concept term="ID_f15a3904c3358e0a0a00206a000cf28e-dcf1dc2ec3358e0a0a00206a00087e00-en-US;ID_599cdd56674af3990a00206a003a672c-dcf1dc2ec3358e0a0a00206a00087e00-en-US;ID_ae4d8aeb674af3990a00206a004ba7fb-dcf1dc2ec3358e0a0a00206a00087e00-en-US;ID_f46e0eedcd74c7b40a00206a00f896e8-dcf1dc2ec3358e0a0a00206a00087e00-en-US;">
</MadCap:concept>
        <script src="Resources/workspace/jscript/nsr.js">/* <![CDATA[ */
        /* ]]> */</script>
        <script src="SkinSupport/MadCapAll.js" type="text/javascript">/* <![CDATA[ */
        /* ]]> */</script>
    <script src="Resources/workspace/jscript/shortcut.js" type="text/javascript">/* <![CDATA[ */
/* ]]> */</script><script src="Resources/workspace/jscript/dy-shortcut.js" type="text/javascript">/* <![CDATA[ */
/* ]]> */</script></head><body><div id="nsr"><span><a class="chm-breadcrumb" href="f877943803274912.htm">Network and Remote Operation</a> &gt; <a class="chm-breadcrumb" href="3483d15d86f943cb.htm">Remote Control Basics</a> &gt; <a class="chm-breadcrumb" href="abd8c6112e0c47e5.htm">Status Reporting System</a> &gt; <span class="chm-breadcrumb">Structure of a SCPI Status Register</span></span></div><div id="mainbody"><div style="width: 95%"><a name="top">
</a><div class="chm-chaptertitle">Structure of a SCPI Status Register</div><p>Each standard SCPI register consists of 5 parts. Each part has a width of 16 bits and has different functions. The individual bits are independent of each other, i.e. each hardware status is assigned a bit number which is valid for all five parts. Bit 15 (the most significant bit) is set to zero for all parts. Thus the contents of the register parts can be processed by the controller as positive integers.</p><a name="kanchor2764">
</a><a name="kanchor2765">
</a><div class="block" id="ID_599cdd56674af3990a00206a003a672c-dcf1dc2ec3358e0a0a00206a00087e00-en-US"><div class="graphic"><img border="0" src="Resources/Images/img7d89de34674618bd0a00206a01b06cc1_3_--_--_PNG96.png" alt="" title="">
</img></div><div class="caption_figure">The status-register model</div></div><div class="block"><div class="subtitle"><a name="ID_ae4d8aeb674af3990a00206a004ba7fb-dcf1dc2ec3358e0a0a00206a00087e00-en-US">
</a>Description of the five status register parts</div></div><p>The five parts of a SCPI register have different properties and functions:</p><a name="kanchor2766">
</a><a name="kanchor2767">
</a><a name="kanchor2768">
</a><a name="kanchor2769">
</a><a name="kanchor2770">
</a><a name="kanchor2771">
</a><a name="kanchor2772">
</a><a name="kanchor2773">
</a><a name="kanchor2774">
</a><a name="kanchor2775">
</a><div class="block"><ul class="list"><li value="1"><b>CONDition</b><br/>The <span class="command">CONDition</span> part is written into directly by the hardware or the sum bit of the next lower register. Its contents reflect the current instrument status. This register part can only be read, but not written into or cleared. Its contents are not affected by reading.</li><li value="2"><b>PTRansition / NTRansition</b><br/>The two transition register parts define which state transition of the <span class="command">CONDition</span> part (none, 0 to 1, 1 to 0 or both) is stored in the <span class="command">EVENt</span> part.<br/>The <b>Positive-TRansition</b> part acts as a transition filter. When a bit of the <span class="command">CONDition</span> part is changed from 0 to 1, the associated <span class="command">PTR</span> bit decides whether the <span class="command">EVENt</span> bit is set to 1.<table border="0" cellpadding="0" cellspacing="0" class="list2"><tr><td valign="baseline" style="padding-top:3px; ; width: 13pt; border:0px solid #FFFFFF;"><span style="font-family: Arial Unicode MS; line-height: 8pt">–</span></td><td valign="top" style="padding-top:3px; ; border:0px solid #FFFFFF;">PTR bit =1: the <span class="command">EVENt</span> bit is set.</td></tr><tr><td valign="baseline" style="padding-top:3px; ; width: 13pt; border:0px solid #FFFFFF;"><span style="font-family: Arial Unicode MS; line-height: 8pt">–</span></td><td valign="top" style="padding-top:3px; ; border:0px solid #FFFFFF;">PTR bit =0: the <span class="command">EVENt</span> bit is not set.</td></tr></table><br/>This part can be written into and read as required. Its contents are not affected by reading.<br/>The <b>Negative-TRansition</b> part also acts as a transition filter. When a bit of the <span class="command">CONDition</span> part is changed from 1 to 0, the associated <span class="command">NTR</span> bit decides whether the <span class="command">EVENt</span> bit is set to 1.<table border="0" cellpadding="0" cellspacing="0" class="list2"><tr><td valign="baseline" style="padding-top:3px; ; width: 13pt; border:0px solid #FFFFFF;"><span style="font-family: Arial Unicode MS; line-height: 8pt">–</span></td><td valign="top" style="padding-top:3px; ; border:0px solid #FFFFFF;">NTR bit =1: the <span class="command">EVENt</span> bit is set.</td></tr><tr><td valign="baseline" style="padding-top:3px; ; width: 13pt; border:0px solid #FFFFFF;"><span style="font-family: Arial Unicode MS; line-height: 8pt">–</span></td><td valign="top" style="padding-top:3px; ; border:0px solid #FFFFFF;">NTR bit =0: the <span class="command">EVENt</span> bit is not set.</td></tr></table><br/>This part can be written into and read as required. Its contents are not affected by reading.</li><li value="3"><b>EVENt</b><br/>The <span class="command">EVENt</span> part indicates whether an event has occurred since the last reading, it is the "memory" of the condition part. It only indicates events passed on by the transition filters. It is permanently updated by the instrument. This part can only be read by the user. Reading the register clears it. This part is often equated with the entire register.</li><li value="4"><b>ENABle</b><br/>The <span class="command">ENABle</span> part determines whether the associated <span class="command">EVENt</span> bit contributes to the sum bit (see below). Each bit of the <span class="command">EVENt</span> part is "ANDed" with the associated <span class="command">ENABle</span> bit (symbol '&amp;'). The results of all logical operations of this part are passed on to the sum bit via an "OR" function (symbol '+').<br/><span class="command">ENABle</span> bit = 0: the associated <span class="command">EVENt</span> bit does not contribute to the sum bit<br/><span class="command">ENABle</span> bit = 1: if the associated <span class="command">EVENt</span> bit is "1", the sum bit is set to "1" as well.<br/>This part can be written into and read by the user as required. Its contents are not affected by reading.</li></ul></div><div class="block"><div class="subtitle"><a name="ID_f46e0eedcd74c7b40a00206a00f896e8-dcf1dc2ec3358e0a0a00206a00087e00-en-US">
</a>Sum bit</div></div><p>The sum bit is obtained from the <span class="command">EVENt</span> and <span class="command">ENABle</span> part for each register. The result is then entered into a bit of the <span class="command">CONDition</span> part of the higher-order register.</p><p>The instrument automatically generates the sum bit for each register. Thus an event can lead to a service request throughout all levels of the hierarchy.</p><div class="chm-go-to-top"><span><a class="chm-go-to-top" href="#top">Top</a></span></div></div></div><script type="text/javascript" src="SkinSupport/MadCapBodyEnd.js">/* <![CDATA[ */
/* ]]> */</script></body></html>